/* ==========================================
   GRID E LAYOUT BASE - VERSÃO DEFINITIVA
   ========================================== */

/* Reset básico para garantir consistência */
* {
  box-sizing: border-box;
}

/* Container básico sem manipulações complexas */
.gridContainer {
  display: grid;
  width: 100%;
  margin: 0 auto;
  padding: 24px;
  grid-gap: 32px;
  
  /* ESTE É O SEGREDO - Definir grid-template-columns de forma simples */
  grid-template-columns: repeat(auto-fill, minmax(320px, 1fr));
}

/* Ajustes especiais para casos específicos de cards */
.gridContainer:has(:nth-child(1):nth-last-child(1)) {
  grid-template-columns: minmax(300px, 600px);
  max-width: 650px;
}

.gridContainer:has(:nth-child(1):nth-last-child(2)) {
  grid-template-columns: repeat(2, 1fr);
  max-width: 900px;
}

.gridContainer:has(:nth-child(1):nth-last-child(3)) {
  grid-template-columns: repeat(3, 1fr);
  max-width: 1200px;
}

/* Card base premium com efeito glassmorphism */
.gridCard {
  position: relative;
  aspect-ratio: 5/6;
  min-height: 420px;
  border-radius: 16px;
  overflow: hidden;
  background-position: center;
  background-size: cover;
  transform: translateY(30px) scale(0.98);
  opacity: 0;
  box-shadow: 0 20px 40px -15px rgba(0, 0, 0, 0.3),
              0 40px 60px -30px rgba(0, 0, 0, 0.2);
  cursor: pointer;
  transition: 
    transform 0.7s cubic-bezier(0.23, 1, 0.32, 1),
    box-shadow 0.5s cubic-bezier(0.23, 1, 0.32, 1),
    opacity 0.5s cubic-bezier(0.23, 1, 0.32, 1);
  display: flex;
  flex-direction: column;
  justify-content: flex-end;
  transform-style: preserve-3d;
  will-change: transform, opacity, box-shadow;
  border: 1px solid rgba(255, 255, 255, 0.1);
  -webkit-backface-visibility: hidden;
  backface-visibility: hidden;
  backdrop-filter: blur(5px);
  -webkit-backdrop-filter: blur(5px);
}

/* Borda premium com gradiente dinâmico */
.gridCard::before {
  content: '';
  position: absolute;
  inset: 0;
  border-radius: 16px;
  padding: 1px;
  background: linear-gradient(145deg,
    rgba(164, 142, 250, 0.6),  /* Roxo mais suave */
    rgba(171, 149, 245, 0.4),  /* Roxo mais suave */
    rgba(164, 142, 250, 0.05), /* Roxo mais suave */
    rgba(171, 149, 245, 0.4),  /* Roxo mais suave */
    rgba(164, 142, 250, 0.6));  /* Roxo mais suave */
  background-size: 400% 100%;
  -webkit-mask: 
    linear-gradient(#fff 0 0) content-box, 
    linear-gradient(#fff 0 0);
  mask: 
    linear-gradient(#fff 0 0) content-box, 
    linear-gradient(#fff 0 0);
  -webkit-mask-composite: xor;
  mask-composite: exclude;
  opacity: 0;
  transition: opacity 0.6s cubic-bezier(0.23, 1, 0.32, 1);
  z-index: 1;
}

/* Estilo quando o card está visível */
.gridCard.inView {
  transform: translateY(0) scale(1);
  opacity: 1;
  animation: card-reveal 0.9s cubic-bezier(0.16, 1, 0.3, 1) forwards;
}

@keyframes card-reveal {
  0% {
    opacity: 0;
    transform: translateY(30px) scale(0.95);
    filter: blur(5px);
  }
  60% { 
    opacity: 0.8;
    filter: blur(0);
  }
  80% {
    transform: translateY(-5px) scale(1.01);
    opacity: 1;
  }
  100% {
    opacity: 1;
    transform: translateY(0) scale(1);
  }
}

/* Efeito hover aprimorado */
.gridCard:hover {
  transform: translateY(-15px) scale(1.02) rotateX(2deg);
  box-shadow: 0 30px 60px -15px rgba(132, 108, 220, 0.3), /* Roxo mais suave */
              0 40px 70px -20px rgba(0, 0, 0, 0.3),
              0 0 0 1px rgba(132, 108, 220, 0.2) inset; /* Roxo mais suave */
  z-index: 5;
}

.gridCard:hover::before {
  opacity: 1;
  animation: borderRotate 8s linear infinite;
}

@keyframes borderRotate {
  0% { background-position: 0% 50%; }
  50% { background-position: 100% 50%; }
  100% { background-position: 0% 50%; }
}

/* Conteúdo do card com tipografia aprimorada */
.cardContent {
  position: relative;
  width: 100%;
  padding: 30px 24px 24px;
  z-index: 3;
  display: flex;
  flex-direction: column;
  transition: transform 0.6s cubic-bezier(0.23, 1, 0.32, 1);
  transform: translateZ(10px);
}

.gridCard:hover .cardContent {
  transform: translateY(-5px) translateZ(30px);
}

/* Overlay do card com efeito gradiente premium */
.cardOverlay {
  position: absolute;
  inset: 0;
  background: linear-gradient(
    to top,
    rgba(15, 23, 42, 0.95) 0%,
    rgba(15, 23, 42, 0.85) 30%,
    rgba(15, 23, 42, 0.6) 60%,
    rgba(15, 23, 42, 0.3) 80%,
    rgba(15, 23, 42, 0.1) 100%
  );
  z-index: 1;
  transition: background 0.6s cubic-bezier(0.23, 1, 0.32, 1);
}

.gridCard:hover .cardOverlay {
  background: linear-gradient(
    to top,
    rgba(132, 108, 220, 0.95) 0%, /* Roxo mais suave */
    rgba(132, 108, 220, 0.85) 25%, /* Roxo mais suave */
    rgba(132, 108, 220, 0.6) 60%, /* Roxo mais suave */
    rgba(132, 108, 220, 0.3) 85%,
    rgba(132, 108, 220, 0.1) 100%
  );
  backdrop-filter: blur(8px);
  -webkit-backdrop-filter: blur(8px);
}

/* Título do card */
.cardTitle {
  font-size: clamp(1.25rem, 4vw, 1.5rem);
  color: var(--dark-color-text-0);
  margin-bottom: 16px;
  line-height: 1.25;
  letter-spacing: -0.02em;
  font-weight: var(--font-semi-bold);
  position: relative;
  display: inline-block;
  transition: transform 0.5s cubic-bezier(0.23, 1, 0.32, 1), color 0.4s ease;
  text-shadow: 0 1px 3px rgba(0, 0, 0, 0.15);
}

.gridCard:hover .cardTitle {
  transform: translateY(-3px);
  color: #fff;
}

.cardTitle::after {
  content: '';
  position: absolute;
  bottom: -4px;
  left: 0;
  width: 0;
  height: 2px;
  background: linear-gradient(90deg, #fff, rgba(255, 255, 255, 0.5), #fff);
  background-size: 200% 100%;
  border-radius: 2px;
  opacity: 0.8;
  transition: width 0.4s cubic-bezier(0.23, 1, 0.32, 1);
}

.gridCard:hover .cardTitle::after {
  width: 100%;
  animation: shimmer 2s infinite;
}

@keyframes shimmer {
  0% { background-position: 0% 0; }
  100% { background-position: 200% 0; }
}

/* Tags com design aprimorado */
.cardTags {
  display: flex;
  flex-wrap: wrap;
  gap: 8px;
  margin-bottom: 16px;
  transition: opacity 0.5s ease;
}

.tag {
  background: rgba(132, 108, 220, 0.15); /* Roxo mais suave */
  color: white;
  padding: 5px 14px;
  border-radius: 30px;
  font-size: 0.75rem;
  font-weight: var(--font-medium);
  transition: all 0.4s cubic-bezier(0.23, 1, 0.32, 1);
  box-shadow: 0 2px 6px rgba(0, 0, 0, 0.1);
  backdrop-filter: blur(5px);
  letter-spacing: 0.02em;
  border: 1px solid rgba(132, 108, 220, 0.2); /* Roxo mais suave */
}

.gridCard:hover .tag {
  background: rgba(255, 255, 255, 0.2);
  transform: translateY(-3px);
  border-color: rgba(255, 255, 255, 0.3);
  color: white;
  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.15);
}

/* Efeito alternado nas tags */
.gridCard:hover .tag:nth-child(odd) {
  transform: translateY(-4px) scale(1.05);
  transition-delay: 0.1s;
}

.gridCard:hover .tag:nth-child(even) {
  transform: translateY(-2px) scale(1.05);
  transition-delay: 0.2s;
}

/* Descrição */
.cardDescription {
  color: rgba(255, 255, 255, 0.7);
  font-size: 0.875rem;
  margin-bottom: 18px;
  display: -webkit-box;
  -webkit-line-clamp: 2;
  line-clamp: 2;
  -webkit-box-orient: vertical;
  overflow: hidden;
  transition: all 0.5s cubic-bezier(0.23, 1, 0.32, 1);
  line-height: 1.6;
}

.gridCard:hover .cardDescription {
  opacity: 0.95;
  transform: translateY(-3px);
  color: rgba(255, 255, 255, 0.95);
}

/* Botões - Layout otimizado para botão único */
.cardActions {
  display: flex;
  justify-content: center;
  opacity: 0;
  transform: translateY(15px);
  transition: all 0.5s ease;
  transition-delay: 0.1s;
  width: 100%;
  margin-top: 8px;
}

.gridCard:hover .cardActions {
  opacity: 1;
  transform: translateY(0);
}

/* Botão principal redesenhado */
.viewButton {
  display: inline-flex;
  align-items: center;
  justify-content: center;
  gap: 10px;
  height: 42px;
  text-transform: uppercase;
  letter-spacing: 0.04em;
  font-weight: var(--font-semi-bold);
  border-radius: 24px;
  transition: all 0.4s cubic-bezier(0.22, 1, 0.36, 1);
  position: relative;
  overflow: hidden;
  z-index: 1;
  white-space: nowrap;
  cursor: pointer;
  backdrop-filter: blur(4px);
  -webkit-backdrop-filter: blur(4px);
  font-family: inherit;
  box-sizing: border-box;
  padding: 0 22px;
  background: rgba(255, 255, 255, 0.95);
  color: var(--color-primary);
  border: none;
  box-shadow: var(--shadow-md);
  width: auto;
  min-width: 160px;
  font-size: 0.76rem;
}

/* Tema escuro/claro para o botão */
html[data-theme="light"] .viewButton {
  background: rgba(var(--color-primary-rgb), 0.95);
  color: white;
  box-shadow: 0 4px 12px rgba(var(--color-primary-rgb), 0.2);
}

/* Texto do botão */
.viewButton span {
  display: inline-block;
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
  line-height: 1;
  padding: 0 4px;
  box-sizing: border-box;
  transform: translateY(0.5px);
}

/* Efeito de hover no botão */
.viewButton:hover {
  transform: translateY(-4px);
  box-shadow: 0 8px 20px rgba(var(--color-primary-rgb), 0.3);
}

/* Efeito de brilho ao passar o mouse */
.viewButton::before {
  content: '';
  position: absolute;
  top: 0;
  left: -100%;
  width: 100%;
  height: 100%;
  background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.3), transparent);
  transition: left 0.8s ease;
  z-index: -1;
}

.viewButton:hover::before {
  left: 100%;
}

/* Efeito ao clicar */
.viewButton:active {
  transform: translateY(-1px);
  box-shadow: 0 2px 8px rgba(var(--color-primary-rgb), 0.2);
  transition: all 0.1s ease;
}

/* Ícone com animação */
.buttonIcon {
  font-size: 0.9rem;
  transition: transform 0.4s cubic-bezier(0.34, 1.56, 0.64, 1);
  flex-shrink: 0;
  opacity: 0.9;
}

.viewButton:hover .buttonIcon {
  transform: translateX(4px);
  opacity: 1;
}

/* Ajustes responsivos para o botão */
@media (min-width: 3000px) {
  .viewButton {
    height: 56px;
    min-width: 220px;
    font-size: 1rem;
    padding: 0 30px;
    border-radius: 28px;
  }
  
  .buttonIcon {
    font-size: 1.2rem;
  }
}

@media (min-width: 1921px) and (max-width: 2999px) {
  .viewButton {
    height: 48px;
    min-width: 180px;
    font-size: 0.85rem;
    padding: 0 26px;
    border-radius: 26px;
  }
  
  .buttonIcon {
    font-size: 1rem;
  }
}

@media (max-width: 768px) {
  .cardActions {
    opacity: 1;
    transform: translateY(0);
    transition: none;
  }
  
  .viewButton {
    min-width: 140px;
    height: 38px;
    font-size: 0.72rem;
    padding: 0 18px;
  }
}

@media (max-width: 576px) {
  .viewButton {
    min-width: 130px;
    height: 36px;
    font-size: 0.7rem;
    padding: 0 16px;
  }
}

/* ==========================================
   BREAKPOINTS SIMPLIFICADOS
   ========================================== */

/* Telas extra grandes e ultrawide */
@media (min-width: 3000px) {
  .gridContainer {
    grid-template-columns: repeat(auto-fill, minmax(480px, 1fr)) !important;
    max-width: 3000px !important;
    gap: 80px !important;
    padding: 60px !important;
  }
  
  .gridCard {
    min-height: 600px !important;
  }
  
  .cardTitle {
    font-size: 2.2rem !important;
  }
  
  .cardDescription {
    font-size: 1.1rem !important;
  }
  
  .viewButton {
    height: 56px !important;
    font-size: 1rem !important;
    padding: 0 30px !important;
  }
}

/* Telas grandes (1921-3000px) */
@media (min-width: 1921px) and (max-width: 2999px) {
  .gridContainer {
    grid-template-columns: repeat(auto-fill, minmax(400px, 1fr)) !important;
    max-width: 2000px !important;
    gap: 60px !important;
    padding: 40px !important;
  }
  
  .gridCard {
    min-height: 520px !important;
  }
  
  .cardTitle {
    font-size: 1.8rem !important;
  }
  
  .cardDescription {
    font-size: 1rem !important;
  }
  
  .viewButton {
    height: 48px !important;
    font-size: 0.85rem !important;
    padding: 0 26px !important;
  }
}

/* Desktops (1201-1920px) */
@media (min-width: 1201px) and (max-width: 1920px) {
  .gridContainer {
    grid-template-columns: repeat(auto-fill, minmax(340px, 1fr));
    max-width: 1400px;
    gap: 32px;
  }
}

/* Laptops e tablets grandes (769-1200px) */
@media (min-width: 769px) and (max-width: 1200px) {
  .gridContainer {
    grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
    gap: 24px;
  }
  
  .gridCard {
    min-height: 380px;
  }
}

/* Tablets (577-768px) */
@media (min-width: 577px) and (max-width: 768px) {
  .gridContainer {
    grid-template-columns: repeat(auto-fill, minmax(260px, 1fr));
    gap: 20px;
  }
  
  .gridCard {
    min-height: 360px;
  }
}

/* Mobile (até 576px) */
@media (max-width: 576px) {
  .gridContainer {
    grid-template-columns: 1fr !important;
    padding: 16px;
    gap: 24px;
  }
  
  .gridCard {
    min-height: 340px;
    aspect-ratio: 1/1.2;
  }
  
  .cardActions {
    opacity: 1;
    transform: none;
  }
}

/* ======= MEDIA QUERIES APRIMORADAS PARA RESPONSIVIDADE ======= */
@media (max-width: 1440px) {
  .gridContainer {
    grid-template-columns: repeat(auto-fill, minmax(320px, 1fr));
    gap: var(--space-m);
  }
}

@media (max-width: 1024px) {
  .gridContainer {
    grid-template-columns: repeat(auto-fill, minmax(280px, 1fr));
    padding: var(--space-m);
    gap: var(--space-s);
  }
  
  .emptyState {
    padding: var(--space-xl) var(--space-m);
  }
}

@media (max-width: 768px) {
  .gridContainer {
    grid-template-columns: repeat(auto-fill, minmax(240px, 1fr));
    padding: var(--space-s);
    gap: var(--space-s);
  }
  
  .gridItem {
    aspect-ratio: 1/1;
  }
  
  .projectImage {
    border-radius: var(--radius-s);
  }
  
  .overlay {
    padding: var(--space-s);
  }
  
  .projectTitle {
    font-size: clamp(1.25rem, 4vw, 1.5rem);
  }
  
  .projectDescription {
    font-size: clamp(0.85rem, 2.5vw, 0.95rem);
    max-width: 100%;
    line-height: 1.4;
  }
  
  .projectTags {
    margin-top: var(--space-xs);
  }
  
  .projectTag {
    font-size: 0.7rem;
    padding: 4px 8px;
    margin-right: var(--space-xs);
    margin-bottom: var(--space-xs);
  }
  
  .emptyState {
    padding: var(--space-l) var(--space-s);
  }
  
  .emptyStateIcon {
    font-size: 3rem;
    margin-bottom: var(--space-s);
  }
  
  .emptyStateText {
    font-size: 1rem;
  }
}

@media (max-width: 480px) {
  .gridContainer {
    grid-template-columns: 1fr;
    padding: var(--space-xs);
    gap: var(--space-s);
  }
  
  .gridItem {
    aspect-ratio: 16/9;
  }
  
  .projectTitle {
    font-size: clamp(1.125rem, 5vw, 1.25rem);
  }
  
  .projectDescription {
    font-size: clamp(0.8rem, 2vw, 0.9rem);
    -webkit-line-clamp: 2;
  }
  
  .projectTags {
    margin-top: var(--space-xs);
    flex-wrap: wrap;
  }
  
  .projectTag {
    font-size: 0.65rem;
    padding: 3px 6px;
  }
  
  .emptyState {
    padding: var(--space-m) var(--space-xs);
  }
  
  .emptyStateIcon {
    font-size: 2.5rem;
    margin-bottom: var(--space-xs);
  }
  
  .emptyStateText {
    font-size: 0.9rem;
  }
}

/* Melhorias para interfaces touch */
@media (hover: none) {
  .gridItem {
    transition: transform 0.2s ease;
  }
  
  .gridItem:active {
    transform: scale(0.98);
  }
  
  .overlay {
    opacity: 0.9;
    background: linear-gradient(to top, rgba(0,0,0,0.8) 0%, rgba(0,0,0,0.4) 50%, rgba(0,0,0,0.1) 100%);
  }
  
  .projectTitle,
  .projectDescription,
  .projectTags {
    opacity: 1;
    transform: translateY(0);
  }
}

/* Otimizações para alto contraste */
@media (prefers-contrast: more) {
  .overlay {
    background-color: rgba(0, 0, 0, 0.85);
  }
  
  .projectTitle {
    text-shadow: none;
  }
  
  .projectTag {
    border: 1px solid currentColor;
  }
}

/* Reduções de animações */
@media (prefers-reduced-motion: reduce) {
  .gridItem,
  .projectImage,
  .overlay,
  .projectTitle,
  .projectDescription,
  .projectTags,
  .projectTag {
    transition: opacity 0.1s linear !important;
    animation: none !important;
    transform: none !important;
  }
}
/* ======= FIM DAS MEDIA QUERIES ======= */

/* ======= MELHORIAS DE RESPONSIVIDADE PARA WORKGRIDVIEW ======= */
@media (max-width: 1400px) {
  .workGrid {
    grid-template-columns: repeat(3, 1fr);
    gap: var(--space-m);
  }
}

@media (max-width: 1200px) {
  .workGrid {
    grid-template-columns: repeat(2, 1fr);
    gap: var(--space-m);
  }
  
  .projectCard {
    aspect-ratio: 4/3;
  }
}

@media (max-width: 992px) {
  .workContainer {
    padding: var(--space-l) var(--space-m);
  }
  
  .workGrid {
    gap: var(--space-s);
  }
  
  .projectCardTitle {
    font-size: clamp(1.25rem, 3vw, 1.75rem);
  }
  
  .projectCardDescription {
    font-size: clamp(0.9rem, 2vw, 1rem);
  }
}

@media (max-width: 768px) {
  .workContainer {
    padding: var(--space-m) var(--space-s);
  }
  
  .workGrid {
    grid-template-columns: repeat(2, 1fr);
    gap: var(--space-xs);
  }
  
  .projectCardOverlay {
    padding: var(--space-s);
  }
  
  .projectCardTags {
    flex-wrap: wrap;
    gap: 6px;
  }
  
  .projectCardTag {
    font-size: 0.8rem;
    padding: 4px 8px;
  }
}

@media (max-width: 576px) {
  .workGrid {
    grid-template-columns: 1fr;
    max-width: 450px;
    margin: 0 auto;
  }
  
  .projectCard {
    aspect-ratio: 16/10;
  }
  
  .loadMoreButton {
    width: 100%;
    max-width: 300px;
    padding: var(--space-s) var(--space-m);
    margin-top: var(--space-m);
  }
}

@media (max-width: 480px) {
  .workContainer {
    padding: var(--space-m) var(--space-xs);
  }
  
  .projectCardTitle {
    font-size: clamp(1.1rem, 5vw, 1.5rem);
  }
  
  .projectCardDescription {
    font-size: 0.85rem;
    margin-bottom: var(--space-xs);
  }
  
  .projectCardTag {
    font-size: 0.75rem;
    padding: 3px 6px;
  }
}

/* Melhorias para interfaces touch */
@media (hover: none) {
  .projectCard {
    /* Em dispositivos touch, mostrar uma prévia do overlay sempre */
    position: relative;
  }
  
  .projectCardOverlay {
    opacity: 0.9;
    background: linear-gradient(0deg, rgba(0,0,0,0.7) 0%, rgba(0,0,0,0.4) 60%, rgba(0,0,0,0) 100%);
    transform: translateY(0);
  }
  
  .projectCardTitle, 
  .projectCardDescription {
    opacity: 1;
    transform: translateY(0);
  }
  
  .projectCardTags {
    opacity: 1;
    transform: translateY(0);
  }
  
  .projectCard:active .projectCardOverlay {
    opacity: 1.
  }
}

/* Reduções de animação */
@media (prefers-reduced-motion: reduce) {
  .projectCard,
  .projectCardImage,
  .projectCardOverlay,
  .projectCardTitle,
  .projectCardDescription,
  .projectCardTags,
  .projectCardTag,
  .loadMoreButton {
    transition: opacity 0.1s linear !important;
    animation: none !important;
    transform: none !important;
  }
}
/* ======= FIM DAS MELHORIAS DE RESPONSIVIDADE ======= */

/* Foi removida toda a complexidade desnecessária e mantidos apenas os estilos essenciais */